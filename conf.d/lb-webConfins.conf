#Custom log
log_format  webConfins  '$remote_addr - $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol" "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

access_log syslog:server=172.16.2.25:514,facility=local7,tag=nginx,severity=info webConfins;
#access_log  /var/log/nginx/webConfins-access.log  webConfins;
    
# Upstream Block
upstream webConfins {
   zone webConfins 64k;
   #least_time header; #load balancing method
   #ip_hash; #ip has
   least_conn; #least connection
   server 172.16.5.15; #max_conns=1; #backup; #put as backup server
   server 172.16.5.133; #weight=3; #weight connection
}

# Active health check or monitoring block
match monitor_webConfins {
    status 200;
}

server {
    listen	80;
    server_name lbconfins.bfi.co.id;
    return 301 https://$server_name$request_uri;
}

server {
    listen       443 ssl;
    server_name lbconfins.bfi.co.id;

    ssl_certificate /etc/nginx/ssl/star.bfi.co.id.chain.crt;
    ssl_certificate_key /etc/nginx/ssl/star.bfi.co.id.key;

    # SSL protocols
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    status_zone webConfins;

   # Zone sync directives.
   # Enables the synchronization of shared memory zones between cluster nodes.
    #zone_sync;
    #zone_sync_server 177.100.10.5;

   # Content caching
    proxy_cache nginx-cache;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    #add_header X-Proxy-Cache $upstream_cache_status;
    #proxy_cache_purge $purge_method;
    #proxy_cache_lock on;
    #proxy_cache_use_stale updating;
    #proxy_cache_key "$host$request_uri$cookie_user";

   # Compression
   # Source: https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    gzip on;
    gzip_types image/gif; #specify the file type that will compress
    #gzip_min_length 1000;

   # Connection & request rate limit; enable or disable when needed.
   # Refered to limit_conn_zone & limit_req_zone config on nginx.conf
    #limit_conn conn_limit 10;
    #limit_req zone=rate_limit;

    #access_log  /var/log/nginx/host.access.log  main;

    # Put the rewrite rule, the request will come to location block /product
    rewrite ^/rewrite/(.*)$ /confinstestmini/$1 last;

    location / {
        return 301 $scheme://$http_host/confinstestmini/;
    }

    location /confinstestmini {
	proxy_http_version 1.1;
        # Add request header
        proxy_set_header Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Remove reponse header
        proxy_hide_header X-AspNet-Version;
        proxy_hide_header X-Powered-By;
        # Add response header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Powered-By Modify-By-Nginx;
        add_header X-Response-Header ADD-By-Nginx;
        add_header X-Proxy-Cache $upstream_cache_status;
        proxy_pass http://webConfins;
        status_zone webConfins_confinstesmini;
    }

    # Health monitoring
    location @hc {
        proxy_pass http://webConfins;
        status_zone webConfins_minitoring;
        health_check fails=3 uri=/confinstestmini/ match=monitor_webConfins mandatory persistent;
    }

    # None Block Location
    location /return {
        return 200 "This is an example of standar block location";
        # Will be match /retunr try access with curl command
    }

    # Case Sensitive ( ~ ) Block
    location ~ /files[0-9] {
        return 200 "This is an example regex case sensitive location block \n";
        # Will be match /files123 or /files<number 0-9>
    }

    # Case Insensitive ( * ) Block
    location ~* /files[0-9] {
        return 200 "This is an example regex case insensitive location block \n";
        # Will be match /FILES123 /Files<number 0-9> or /FilEs<number 0-9>
    }

    # Preferential Regex Block
    location ^~ /filesinfo {
        return 200 "This is an example like standard block, but more important than regex \n";
        # Will be match /filesinfo or /filesinfoxxx
    }

    location /nginx_status {
        # Turn on stats
        stub_status on;
        access_log   off;
        # only allow access from 192.168.1.5 #
        #allow 192.168.1.5;
        #deny all;
     }
   

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # enable /api/ location with appropriate access control in order
    # to make use of NGINX Plus API
    #
    location /api/ {
        api write=on;
    #    allow 127.0.0.1;
    #    deny all;
    }

}
